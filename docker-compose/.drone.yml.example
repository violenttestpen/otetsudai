clone:
  git:
    image: plugins/git
    recursive: true
    submodule_override:
      submodule: 'https://bitbucket.org/user/repo.git'

pipeline:
  # Executed only in master branch
  config_prod:
    image: scottlackey/drone-auth-ecr
    commands:
      - mv app/prod_config.py app/config.py
    when:
      branch: master

  # Executed only in develop and master branch
  build_image:
    image: scottlackey/drone-auth-ecr
    commands:
      - aws ecr get-login | bash
      - docker pull <image>
      - docker build -t staging .
    volumes:
      - /home/ubuntu/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: [ master, develop ]

  # Executed only in develop and master branch
  unit_test:
    image: staging
    commands:
      - python -m unittest discover -s unittests
    when:
      branch: [ master, develop ]

  # Executed only in master branch
  squash_image:
    image: rassie/docker-squash
    commands:
      - docker-squash staging
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master

  # Executed only in master branch
  push_to_ecr:
    image: scottlackey/drone-auth-ecr
    environment:
      - IMAGE_NAME=api
    commands:
      - aws ecr get-login | bash
      - docker tag staging:latest ${IMAGE_NAME}:latest
      - docker push ${IMAGE_NAME}:latest
    volumes:
      - /home/ubuntu/.aws:/root/.aws
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: master

  # deploy:
    # image: scottlackey/drone-auth-ecr
    # commands:
      # - aws elasticbeanstalk update-environment 
        # --application-name <app_name> 
        # --environment-name <env_name> 
        # --version-label "First Release"
    # volumes:
      # - /home/ubuntu/.aws:/root/.aws

  # Executed only in develop and master branch
  notify:
    image: jmccann/drone-hipchat
    room: development
    auth_token: abcdef
    template: |
      {{#success build.status}}
        Build and unit-tests for {{ build.branch }} is successful.
      {{ else }}
        {{ build.author }} broke the build. Hang your head in shame.
      {{/success}}
    when:
      branch: [ master, develop ]
      status: [ success, failure ]

  # Executed only in develop and master branch
  cleanup:
    image: scottlackey/drone-auth-ecr
    commands:
      - docker rmi staging:latest
      - docker rmi `docker images --filter "dangling=true" -aq` || echo "No dangling images"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    when:
      branch: [ master, develop ]
